'use client';
import React, { useEffect, useRef, useState } from "react";
import buy from "@/app/styles/scss/index.module.scss";
import PaypalButton from "@/app/core/utils/PaypalButton";
import paypal from "@/app/styles/scss/index.module.scss";
import { PayPalScriptProvider } from "@paypal/react-paypal-js";
import CurrencySelect from "@/app/core/utils/CurrencySelect";
import Link from "next/link";
import { fetchRate } from "@/app/core/utils/fetchConversionRate";

interface Props {
  clientId: string;
}
interface ratesInterface{
  [key: string ]:number
}
export let rates:ratesInterface={
  USD:0.001,
  CAD:0.00135,
  EUR:0.00093,
  BRL:0.00498,
  CZK:0.02204,
  AUD:0.00151,
}

const Section2 = ({ clientId }: Props) => {

  const [currency,setCurrency]=useState("")
  const [amount,setAmount] = useState("")
  const [total, setTotal] = useState("");
  const [totalPrompt, setPrompt] = useState("loading price.....");
  const amountRef = useRef<HTMLInputElement>(null);

  useEffect(() => {
   
    if(amountRef.current){
    window.sessionStorage.setItem("productPrice", String((parseFloat(amountRef.current.value) * rates["USD"]).toFixed(2)));
    window.sessionStorage.setItem("description", "generated by next13");
    }
  }, [total, totalPrompt]);

  const changeInput = () => {
    if (amountRef.current) {
      if (amountRef.current.value == "") {
        setTotal("");
      }
      if (!Number.isNaN(parseInt(amountRef.current.value))) {
        const amount = parseInt(amountRef.current.value);
        if (amount) {
         if(amountRef.current.value){
          setAmount(amountRef.current.value)
         setTotal(String((parseFloat(amountRef.current.value) * rates["USD"]).toFixed(2)))
          setPrompt(`total = ${String((parseFloat(amountRef.current.value) * rates["USD"]).toFixed(2))}  USD`);
         }
        }
      }
    }
  };


  return (
    <PayPalScriptProvider
      options={{
        "client-id": clientId,
        currency: "USD"
      }}
    >
      <section>
        <header>
          <div className={buy.Container}>
            <h1>
              <em>Get DPO tokens via fiat payment</em>
            </h1>
            <div className={buy.currencySelection}>
              <h3>Select Payment Currency</h3>
              {/* <CurrencySelect /> */}
              </div>
            <input
              onChange={changeInput}
              ref={amountRef}
              min={100000}
              type="number"
              placeholder="Enter amount of tokens"
            />
            {amountRef.current?.value ? <p id="total">{totalPrompt}</p> : <></>}
            <div className={paypal.paypalButtonContainer}>
              <PaypalButton amount={amount}  />
            </div>
            <div>
              <hr />
              <small>or</small>
              <hr />
            </div>
            <h2>
              <em>Swap Exchange</em>
            </h2>
            <small>Swap DPO tokens with other tokens and vice versa</small>
            <button>
              <Link href={"https://dpo-swap.vercel.app/"} target="_blank">
                Go To Swap
              </Link>
            </button>
          </div>
        </header>
      </section>
    </PayPalScriptProvider>
  );
};

export default Section2;
